<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <listener>
        <listener-class>com.lipeng.common.listener.WebContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.lipeng.common.listener.EhCacheLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.lipeng.common.listener.TimerStarterListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.lipeng.common.udp.listener.UdpStartListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.lipeng.common.listener.RequestListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.lipeng.common.listener.SessionListener</listener-class>
    </listener>

    <!-- 单位分钟 -->
    <session-config>
        <session-timeout>1</session-timeout>
    </session-config>

    <!--&lt;!&ndash;web容器启动时就会触发此监听器调用相应的方法创建spring容器&ndash;&gt;-->
    <!--    <listener>-->
    <!--        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
    <!--    </listener>-->

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>RequestFilter</filter-name>
        <filter-class>com.lipeng.common.filter.RequestFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>RequestFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- SensitiveWordsFilter 和 SensitiveWordsParamsValidateFilter 适用于参数名的 不适合对象接收-->
    <filter>
        <filter-name>SensitiveWordsFilter</filter-name>
        <filter-class>com.lipeng.common.filter.SensitiveWordsFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>SensitiveWordsFilter</filter-name>
        <url-pattern>/binding/getRequestParam</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>SensitiveWordsParamsValidateFilter</filter-name>
        <filter-class>com.lipeng.common.filter.SensitiveWordsParamsValidateFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>SensitiveWordsParamsValidateFilter</filter-name>
        <url-pattern>/binding/get</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SensitiveWordsParamsValidateFilter</filter-name>
        <url-pattern>/binding/postObject</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>SensitiveWordsJsonValidateFilter</filter-name>
        <filter-class>com.lipeng.common.filter.SensitiveWordsJsonValidateFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>SensitiveWordsJsonValidateFilter</filter-name>
        <url-pattern>/binding/postJson</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>dispatcherOnceFilter</filter-name>
        <filter-class>com.lipeng.common.filter.DispatcherOnceFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>dispatcherOnceFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

<!--    <filter>-->
<!--        <filter-name>dispatcherFilter</filter-name>-->
<!--        <filter-class>com.lipeng.common.filter.DispatcherFilter</filter-class>-->
<!--    </filter>-->

<!--    <filter-mapping>-->
<!--        <filter-name>dispatcherFilter</filter-name>-->
<!--        <url-pattern>/*</url-pattern>-->
<!--        <dispatcher>REQUEST</dispatcher>-->
<!--        <dispatcher>FORWARD</dispatcher>-->
<!--        <dispatcher>INCLUDE</dispatcher>-->
<!--        <dispatcher>EXCEPTION</dispatcher>-->
<!--    </filter-mapping>-->

    <!--&lt;!&ndash; Spring MVC servlet &ndash;&gt;-->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>firstServlet</servlet-name>
        <servlet-class>com.lipeng.common.servlet.FirstServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>firstServlet</servlet-name>
        <url-pattern>/firstServlet/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>com.lipeng.common.servlet.DispatcherServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/dispatcherServlet</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

</web-app>